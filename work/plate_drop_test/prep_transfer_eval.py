#!/usr/bin/python
#
# Script which runs the initial rigid-body simulation

import sys
import os


installPath = '/home/jchadwick/research/acoustics';
if ( len(sys.argv) >= 2 ):
  installPath = sys.argv[1];

# Optionally specify where things are built
if ( len(sys.argv) >= 3 ):
  binPath = '%s/%s/src' % ( installPath, sys.argv[2] );
else :
  binPath = '%s/gcc-build/src' % ( installPath );

# Generated by run_sim.py
displaceFile = 'displace.bin';

# File with center of mass positions for each object (we will build this here)
massCenterFile = 'mc.txt';
mapFile = 'obj_model_map.txt';

# Pattern for output files (fp-%d.txt)
outputFilePattern = 'field_pts/fp-%d.txt';

nObjects = 1;

# Evaluate transfer at 1000Hz
transferEvalTimestep = 0.001;

# Listening position
listenPosition = [ 1.0, 1.0, 1.0 ];

tetMesh = '%s/work/plate/plate.tet' % ( installPath );

# Build mc.txt
os.system( 'rm -f %s' % ( massCenterFile ) );
cmd = '%s/init-mass-centers %s 0 0 %s' % ( binPath, tetMesh, massCenterFile );

print( "=== Preparing mass center file" );
os.system(cmd);
print( "=== Done\n" );

# Build obj_model_map.txt (used by transfer scripts on the hydras)
os.system( 'rm -rf %s' % ( mapFile ) );
cmd = 'echo "0 plate" > %s' % ( mapFile );

print( "=== Preparing object <--> model map file" );
os.system(cmd);
print( "=== Done" );

# Generate the fieldpoints file(s)

os.system( 'mkdir -p field_pts' );

cmd = '%s/fieldpoints_gen -i %s -x %s -o %s -n %d -t %f %f %f %f' \
       % ( binPath, displaceFile, massCenterFile, outputFilePattern, \
           nObjects, transferEvalTimestep, \
           listenPosition[0], listenPosition[1], listenPosition[2] );

print( "=== Setting up field points" );
os.system(cmd);
print( "=== Done" );

simName = 'plate_drop_test';

# Finally, put everything in a tarball so that it can be moved to the cluster
# 
# Move plate_drop_test.tar.gz t= /hydra/S1/impact_snd/fastbem/sim and untar
# it there.  This should create the directory 'plate_drop_test'
#
# Navigate to /hydra/S1/impact_snd/fastbem/sim/plate_drop_test
# From this directory, run ./../../scripts/comp_trans_val.pl . <objid> <modeid>
# For this example, objid will be 0, since there is only one object, and
# you should run this for all audible modes.
#
# Once you are done with all of the modes, copy
# /hydra/S1/impact_snd/fastbem/sim/plate_drop_test/fbem_ret
# back to the plate_drop_test work directory on your machine.  This directory
# will store files with time series of values for each modal transfer function
cmd = "tar --transform 's,^,%s/,' -czvf %s.tar.gz field_pts/ %s" \
       % ( simName, simName, mapFile );
os.system(cmd);
